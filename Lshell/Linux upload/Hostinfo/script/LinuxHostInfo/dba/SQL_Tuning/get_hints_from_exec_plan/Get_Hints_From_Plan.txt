=================  1. get hints from plan_table, v$sql_plan 

explain plan set statement_id='zzzzz'
for
select * from t3 where a1=90909090;

VAR other_xml CLOB;


begin
select other_xml into :other_xml from plan_table where other_xml is not null and statement_id='zzzzz' and rownum<2;
--select other_xml into :other_xml from plan_table where other_xml is not null and plan_id=(select max(plan_id) from plan_table) and rownum<2;
--select other_xml into :other_xml from v$sql_plan where sql_id='fys96m4wgx55w' and other_xml is not null and plan_hash_value=&planhash and rownum<2;
end;
/


SELECT /*+ opt_param('parallel_execution_enabled', 'false') */
                   'q''['||
                   SUBSTR(EXTRACTVALUE(VALUE(d), '/hint'), 1, 4000)
                   ||']'','
                   hint
              FROM TABLE(XMLSEQUENCE(EXTRACT(XMLTYPE(:other_xml), '/*/outline_data/hint'))) d;






=================  2. make sure the sql resides in shared_pool,otherwise you need enter sql text in  Setp 3
set long 10000

select sql_fulltext from v$sqlstats where sql_id='&&sqlid';



=================  3. set hints for a sql resides in shared_pool  
set serverout on

DECLARE
sql_txt CLOB;
h SYS.SQLPROF_ATTR;
signature number;
BEGIN

select sql_fulltext into sql_txt from v$sqlstats where sql_id='&&sqlid';
-- sql_text:=q'[/************************* enter full sql text here *****************/]';

h := SYS.SQLPROF_ATTR(q'[BEGIN_OUTLINE_DATA]',
/************************* copy/paste hints here *****************/
q'[END_OUTLINE_DATA]');

signature := DBMS_SQLTUNE.SQLTEXT_TO_SIGNATURE(sql_txt);

dbms_output.put_line('SQL Signature: '||signature);

DBMS_SQLTUNE.IMPORT_SQL_PROFILE (
sql_text    => sql_txt,
profile     => h,
name        => 'mysqlprofile_&&sqlid',
description => 'mysqlprofile_&&sqlid'||signature||'',
category    => 'DEFAULT',
validate    => TRUE,
replace     => TRUE,
force_match => FALSE /* TRUE:FORCE (match even when different literals in SQL). FALSE:EXACT (similar to CURSOR_SHARING) */ );

END;
/




=================  4. drop sqlprofile if necessary  

BEGIN
DBMS_SQLTUNE.DROP_SQL_PROFILE('mysqlprofile_agw3yr267bd1y');
END;
/



